{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMi/hRNakzsxJejitVxHoTP",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/dishhaaa/Python/blob/main/Python%20PNC%20Generator\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 795
        },
        "id": "ReI7Yxx_xdWG",
        "outputId": "69b1ea8b-7eaa-425d-c40f-43314a2cb566"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter value of shift register4\n",
            "Enter b0= 01\n",
            "Enter b1= 01\n",
            "Enter b2= 00\n",
            "Enter b3= 00\n",
            "16\n",
            "[1, 0, 0, 0]\n",
            "[0, 0, 0, 1]\n",
            "[0, 0, 1, 0]\n",
            "[0, 1, 0, 0]\n",
            "[1, 0, 0, 1]\n",
            "[0, 0, 1, 1]\n",
            "[0, 1, 1, 0]\n",
            "[1, 1, 0, 1]\n",
            "[1, 0, 1, 0]\n",
            "[0, 1, 0, 1]\n",
            "[1, 0, 1, 1]\n",
            "[0, 1, 1, 1]\n",
            "[1, 1, 1, 1]\n",
            "[1, 1, 1, 0]\n",
            "[1, 1, 0, 0]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "  import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "m= int(input(\"Enter value of shift register\"))\n",
        "b0= int(input(\"Enter b0= 0\"))\n",
        "b1= int(input(\"Enter b1= 0\"))\n",
        "b2= int(input(\"Enter b2= 0\"))\n",
        "b3= int(input(\"Enter b3= 0\"))\n",
        "\n",
        "n= pow (2,m)\n",
        "print(n)\n",
        "#Generate the sequence\n",
        "\n",
        "sequence=[]\n",
        "for i in range (1,n):\n",
        "    listt= []\n",
        "    b00=b0\n",
        "    b01=b1\n",
        "    b02=b2\n",
        "    b03=b3\n",
        "    b0=b01\n",
        "    b1=b02\n",
        "    b2=b03\n",
        "    b3=b01^ b00\n",
        "    listt.append(b0)\n",
        "    listt.append(b1)\n",
        "    listt.append(b2)\n",
        "    listt.append(b3)\n",
        "    print(listt)\n",
        "    sequence.append(listt)\n",
        "\n",
        "\n",
        "#convert nested lists to 1D arrays for autocorrelationcalculation\n",
        "sequence= np.array(sequence)\n",
        "\n",
        "autocorrelation = []\n",
        "for i in range(sequence.shape[1]):\n",
        "    ac = np.correlate(sequence[:,i], sequence[:,i], mode='full')\n",
        "    autocorrelation.append(ac)\n",
        "\n",
        "\n",
        "#calculate the overall autocorrelation graph by averaging all sequences autocorrelation\n",
        "final_autocorrelation =np.mean(autocorrelation, axis=0)\n",
        "\n",
        "lags= np.arange(-len(sequence) +1, len(sequence))\n",
        "plt.plot(lags, final_autocorrelation, marker= 'o')\n",
        "plt.grid(True)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "KVtYyi6g0TVp"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}